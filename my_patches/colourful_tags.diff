diff --git a/config.def.h b/config.def.h
index 061ad66..cd1935b 100644
--- a/config.def.h
+++ b/config.def.h
@@ -18,6 +18,22 @@ static const char *colors[][3]      = {
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
 };
 
+/* colours for tag bar, at least one entry is needed
+ * default foreground is colours from gruvbox dark
+ * default background should be the same as bg in SchemeNorm
+ */
+static const char *tag_colours[][2] = {
+       /* fg           bg  */
+       { "#cc241d", col_gray1},
+       { "#98971a", col_gray1},
+       { "#d79921", col_gray1},
+       { "#458588", col_gray1},
+       { "#b16286", col_gray1},
+       { "#689d6a", col_gray1},
+};
+
+static const char *being_viewed[] = {"", ""};
+
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
diff --git a/dwm.c b/dwm.c
index e5efb6a..bba43f0 100644
--- a/dwm.c
+++ b/dwm.c
@@ -264,6 +264,7 @@ static Atom wmatom[WMLast], netatom[NetLast];
 static int running = 1;
 static Cur *cursor[CurLast];
 static Clr **scheme;
+static Clr **tag_scheme;
 static Display *dpy;
 static Drw *drw;
 static Monitor *mons, *selmon;
@@ -490,6 +491,9 @@ cleanup(void)
 	for (i = 0; i < LENGTH(colors); i++)
 		free(scheme[i]);
 	free(scheme);
+	for (i = 0; i < LENGTH(tag_colours); i++)
+		free(tag_scheme[i]);
+	free(tag_scheme);
 	XDestroyWindow(dpy, wmcheckwin);
 	drw_free(drw);
 	XSync(dpy, False);
@@ -703,6 +707,7 @@ drawbar(Monitor *m)
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0;
+	const char *_tag;
 	Client *c;
 
 	if (!m->showbar)
@@ -722,9 +727,10 @@ drawbar(Monitor *m)
 	}
 	x = 0;
 	for (i = 0; i < LENGTH(tags); i++) {
-		w = TEXTW(tags[i]);
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
-		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
+		_tag = being_viewed[m->tagset[m->seltags] & 1 << i ? 0 : 1];
+		w = TEXTW(_tag);
+		drw_setscheme(drw, tag_scheme[i % LENGTH(tag_colours)]);
+		drw_text(drw, x, 0, w, bh, lrpad / 2, _tag, urg & 1 << i);
 		if (occ & 1 << i)
 			drw_rect(drw, x + boxs, boxs, boxw, boxw,
 				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
@@ -1571,6 +1577,9 @@ setup(void)
 	scheme = ecalloc(LENGTH(colors), sizeof(Clr *));
 	for (i = 0; i < LENGTH(colors); i++)
 		scheme[i] = drw_scm_create(drw, colors[i], 3);
+	tag_scheme = ecalloc(LENGTH(tag_colours), sizeof(Clr *));
+	for (i = 0; i < LENGTH(tag_colours); i++)
+		tag_scheme[i] = drw_scm_create(drw, tag_colours[i], 2);
 	/* init bars */
 	updatebars();
 	updatestatus();
